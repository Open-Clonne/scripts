# base-image for python on any machine using a template variable,
# see more about dockerfile templates here:http://docs.resin.io/pages/deployment/docker-templates
FROM resin/%%BALENA_ARCH%%-python:3

# install apt-utils
RUN apt-get update && apt-get install -yq \
apt-utils && \
apt-get clean && rm -rf /var/lib/apt/lists/*

# use alsa sound utils
RUN apt-get update && apt-get install -yq \
alsa-utils libasound2-dev && \
apt-get clean && rm -rf /var/lib/apt/lists/*

# install linux voice package for python
RUN apt-get update && apt-get install -yq \
espeak && \
apt-get clean && rm -rf /var/lib/apt/lists/*

# install package for python espeak
RUN apt-get update && apt-get install -yq \
python-espeak && \
apt-get clean && rm -rf /var/lib/apt/lists/*

# install package for pygame
RUN apt-get update && apt-get install -yq \
apt-file && \
apt-get clean && rm -rf /var/lib/apt/lists/*

RUN apt-file update && apt-file search "sdl-config"

RUN apt-get update && apt-get install -yq \
libsdl1.2-dev && \
apt-get clean && rm -rf /var/lib/apt/lists/*

RUN pip install --upgrade pip

RUN apt-get update && apt-get install -yq \
libsdl-dev libsdl-image1.2-dev libsdl-mixer1.2-dev libsdl-ttf2.0-dev libsmpeg-dev libportmidi-dev libavformat-dev libswscale-dev python3-dev python3-numpy && \
apt-get clean && rm -rf /var/lib/apt/lists/*

# Set our working directory
WORKDIR /usr/src/app

# Copy requirements.txt first for better cache on later pushes
COPY ./requirements.txt /requirements.txt

# pip install python deps from requirements.txt on the resin.io build server
RUN pip install -r /requirements.txt

# This will copy all files in our root to the working  directory in the container
COPY . ./

# switch on systemd init system in container
ENV INITSYSTEM on

# main.py will run when container starts up on the device
CMD ["python","-u","main.py"]